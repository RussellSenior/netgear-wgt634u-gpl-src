diff -ruN autofs-4.0.0pre10.orig/man/auto.master.5 autofs-4.0.0pre10/man/auto.master.5
--- autofs-4.0.0pre10.orig/man/auto.master.5	2003-10-12 16:27:56.000000000 +0200
+++ autofs-4.0.0pre10/man/auto.master.5	2003-10-12 15:52:23.000000000 +0200
@@ -2,7 +2,7 @@
 .\" $Id: auto.master.5,v 1.3 1998/11/05 01:13:18 hpa Exp $
 .TH AUTO.MASTER 5 "9 Sep 1997"
 .SH NAME
-/etc/auto.master \- Master Map for automounter
+auto.master \- Master Map for automounter
 .SH "DESCRIPTION"
 The
 .B auto.master
@@ -13,25 +13,22 @@
 describing the file systems to be mounted under this mountpoint. The access
 to those maps is governed by a key.
 .P
-If the file
-.B /etc/auto.master
-exists, only this file is used as master map.
-If needed, an additional NIS map can be included in this file with:
+You can configure in /etc/nsswitch.conf which map should be used under the
+database `automount'. Currently, the schemes `files', `nis' and `ldap' are
+supported. The following example will use /etc/auto.master and the auto.master
+NIS map:
+.P
+automount: files nis
+.P
+If no schemes are defined in /etc/nsswitch.conf, the autofs script will
+try /etc/auto.master, the auto.master NIS map and an an LDAP map (in this
+order).
+.P
+If you use /etc/auto.master, an additional NIS map can be included in this file with:
 .P
 .I +map
 .B [options]
 .P
-If
-.B /etc/auto.master
-doesn't exist,
-.BR autofs (8)
-looks for a NIS map called
-.B auto.master
-and processes this map instead. So you can have a global NIS map and
-optionally add entries in
-.B /etc/auto.master
-on the local machine.
-.P
 Access to an automounted file system is customarily done using the path scheme:
 .P
 .RI / mountpoint / key / path / file ,
@@ -100,7 +97,7 @@
 .nf
 /home  auto.home
 /misc  /etc/auto.misc -Dfoo=bar,rsize=8192,wsize=8192,--timeout=10
-/data  ldap:ldapserver.example.com:ou=auto.data,dc=example,dc=com rsize=8192,wsize=8192
+/data  ldap:ldapserver.example.com:ou=auto.data,ou=Automount,dc=example,dc=com rsize=8192,wsize=8192
 +auto.master
 .fi
 .RE
diff -ruN autofs-4.0.0pre10.orig/man/autofs.8.in autofs-4.0.0pre10/man/autofs.8.in
--- autofs-4.0.0pre10.orig/man/autofs.8.in	2003-10-12 16:27:56.000000000 +0200
+++ autofs-4.0.0pre10/man/autofs.8.in	2003-10-12 15:52:23.000000000 +0200
@@ -23,7 +23,7 @@
 .SH "OPERATION"
 .B autofs
 will consult a configuration file
-.I /etc/auto.master
+.I auto.master
 (see
 .BR auto.master (5))
 to find mount points on the system. For each of those mount points a
@@ -31,16 +31,7 @@
 process is started with the appropriate parameters. You can check the
 active mount points for the automounter with the
 .B @@INIT.D@@/autofs status
-command. If the
-.I auto.master
-configuration file contains a line of the form
-.P
-.I +map
-.B [options]
-.P
-then the script will check for an NIS map with the same name.  If such a
-map exists then that map will be processed in the same way as the
-auto.master map, with any optional arguments.
+command.
 .P
 .B @@INIT.D@@/autofs start
 will start daemons for all configured mount points.
diff -ruN autofs-4.0.0pre10.orig/samples/rc.autofs.in autofs-4.0.0pre10/samples/rc.autofs.in
--- autofs-4.0.0pre10.orig/samples/rc.autofs.in	2003-10-12 16:27:55.000000000 +0200
+++ autofs-4.0.0pre10/samples/rc.autofs.in	2003-10-12 16:27:40.000000000 +0200
@@ -80,6 +80,71 @@
     daemonoptions="--timeout=$TIMEOUT $daemonoptions"
 fi
 
+# Extract the schemes from /etc/nsswitch.conf
+# (function derived from RedHat)
+function getschemes()
+{
+    grep ^automount: /etc/nsswitch.conf | sed -e 's/^.*://' -e 's/\[.*\]/ /g'
+}
+
+# Process the schemes found in /etc/nsswitch.conf
+# (function derived from RedHat, with some modifications)
+function getrawmounts()
+{
+    for scheme in `getschemes` ; do
+        case "$scheme" in
+            files)
+                if [ -z "$filescheme" ] ; then
+                    if getmounts_file /etc/auto.master; then
+                        filescheme=1  # success
+		    else
+                        filescheme=0  # failure
+                    fi
+                    export filescheme
+                fi
+                ;;
+            nis)
+                if [ -z "$nisscheme" ] ; then
+                    if getnismounts auto.master; then
+                        nisscheme=1  # success
+		    else
+                        nisscheme=0  # failure
+                    fi
+                    export nisscheme
+                fi
+                ;;
+            ldap*)
+                if [ -z "$ldapscheme" ] ; then
+                    if getldapmounts; then
+                        ldapscheme=1  # success
+		    else
+                        ldapscheme=0  # failure
+                    fi
+                    export ldapscheme
+                fi
+                ;;
+        esac
+    done
+
+    if [ -z "$filescheme" -a -z "$nisscheme" -a -z "$ldapscheme" ]; then
+	# nothing configured in /etc/nsswitch.conf, fall back to old behaviour
+
+	if ! getmounts_file /etc/auto.master; then
+	    if ! getnismounts auto.master; then
+		if ! getldapmounts; then
+		    echo "no autofs mounts configured!" 1>&2
+		fi
+	    fi
+	fi
+    else
+	if [ ! \( "$filescheme" == "1" -o "$nisscheme" == "1" -o "$ldapscheme" == "1" \) ]; then
+	    # all schemes found in /etc/nsswitch.conf have failed
+
+	    echo "no autofs mounts configured!" 1>&2
+	fi
+    fi
+}
+
 #
 # This function will build a list of automount commands to execute in
 # order to activate all the mount points. It is used to figure out
@@ -87,13 +152,11 @@
 #
 function getmounts()
 {
-    if ! getmounts_file /etc/auto.master; then
-	if ! getnismounts auto.master; then
-	    echo "no autofs mounts configured!" 1>&2
-	fi
-    fi
+    getrawmounts
 }
 
+
+
 function getmounts_file()
 {
     #
@@ -231,6 +294,39 @@
     fi
 }
 
+function getldapmounts() {
+    if [ ! -x /usr/bin/ldapsearch -o -z "$LDAPURI" -o -z "$LDAPBASE" ]; then
+	return 1
+    fi    
+
+    # TODO: Doesn't yet work for LDIF output where lines are continued on the
+    #       next line (starting with space or tab). (See ldif(5))
+
+    ldapsearch -LLL -H $LDAPURI -b $LDAPBASE -x \
+	'(objectClass=automount)' cn automountInformation 2>/dev/null \
+    | while read attr val; do
+	case "$attr" in
+	    dn:) 
+		node=""
+		args=""
+		;;
+	    cn:)
+		node=$val
+		;;
+	    automountInformation:)
+		args=$val
+		;;
+	    *)
+		;;
+	esac
+	if [ -n "$node" -a -n "$args" ]; then
+	    echo "$node $args" | process_master_file "$@"
+	    node=""
+	    args=""
+	fi
+    done
+}
+
 #
 # List active mounts
 #
